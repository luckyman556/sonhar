/* ==========================================================================
   Header layout styles
   ========================================================================== */

$vertical-header-width: 220px;

$vertical-content-grid-width-responsive-map: (
	1400 : (
		responsive-break: (
			$screen-size-1441: $screen-size-1680,
			$screen-size-1281: $screen-size-1440,
			$screen-size-1025: $screen-size-1280,
		),
		content-grid-width: (
			$content-grid-width-1100,
			$content-grid-width-screen-size-1200,
			$content-grid-width-screen-size-1024,
		)
	),
	1300 : (
		responsive-break: (
			$screen-size-1441: $screen-size-1680,
			$screen-size-1281: $screen-size-1440,
			$screen-size-1025: $screen-size-1280,
		),
		content-grid-width: (
			$content-grid-width-1100,
			$content-grid-width-screen-size-1200,
			$content-grid-width-screen-size-1024,
		)
	),
	1200 : (
		responsive-break: (
			$screen-size-1441: $screen-size-1680,
			$screen-size-1281: $screen-size-1440,
			$screen-size-1025: $screen-size-1280,
		),
		content-grid-width: (
			$content-grid-width-1100,
			$content-grid-width-screen-size-1200,
			$content-grid-width-screen-size-1024,
		)
	),
	1100 : (
		responsive-break: (
			$screen-size-1281: $screen-size-1366,
			$screen-size-1025: $screen-size-1280,
		),
		content-grid-width: (
			$content-grid-width-screen-size-1200,
			$content-grid-width-screen-size-1024,
		)
	)
);

.qodef-header--vertical {

	.qodef-content-grid {

		@each $key, $values in $vertical-content-grid-width-responsive-map {
			$index: 1;

			@each $responsive-key, $responsive-value in map-deep-get($vertical-content-grid-width-responsive-map, $key, 'responsive-break') {

				@media only screen and (min-width: $responsive-key) and (max-width: $responsive-value) {

					@at-root .qodef-content-grid-#{$key}#{&} {
						width: #{nth(map-deep-get($vertical-content-grid-width-responsive-map, $key, 'content-grid-width'), $index)};

						&.qodef-extended-grid--right {
							padding-left: calc((100% - #{nth(map-deep-get($vertical-content-grid-width-responsive-map, $key, 'content-grid-width'), $index)})/2);
						}

						&.qodef-extended-grid--left {
							padding-right: calc((100% - #{nth(map-deep-get($vertical-content-grid-width-responsive-map, $key, 'content-grid-width'), $index)})/2);
						}
					}
				}

				$index: $index + 1;
			}
		}
	}

	section.qodef-elementor-content-grid > .elementor-container {

		@each $key, $values in $vertical-content-grid-width-responsive-map {
			$index: 1;

			@each $responsive-key, $responsive-value in map-deep-get($vertical-content-grid-width-responsive-map, $key, 'responsive-break') {

				@media only screen and (min-width: $responsive-key) and (max-width: $responsive-value) {

					@at-root .qodef-content-grid-#{$key}#{&} {
						width: #{nth(map-deep-get($vertical-content-grid-width-responsive-map, $key, 'content-grid-width'), $index)};
					}
				}

				$index: $index + 1;
			}
		}
	}

	section.qodef-elementor-content-grid {

		@each $key, $values in $vertical-content-grid-width-responsive-map {
			$index: 1;

			@each $responsive-key, $responsive-value in map-deep-get($vertical-content-grid-width-responsive-map, $key, 'responsive-break') {

				@media only screen and (min-width: $responsive-key) and (max-width: $responsive-value) {

					@at-root .qodef-content-grid-#{$key}#{&} {

						&.qodef-extended-grid--right > .elementor-container {
							padding-left: calc((100% - #{nth(map-deep-get($vertical-content-grid-width-responsive-map, $key, 'content-grid-width'), $index)})/2);
						}

						&.qodef-extended-grid--left > .elementor-container {
							padding-right: calc((100% - #{nth(map-deep-get($vertical-content-grid-width-responsive-map, $key, 'content-grid-width'), $index)})/2);
						}
					}
				}

				$index: $index + 1;
			}
		}
	}
	
	#qodef-page-header {
		position: fixed;
		top: 0;
		left: 0;
		width: $vertical-header-width;
		height: 100%;
	}
	
	#qodef-page-header-inner {
		display: flex;
		align-items: flex-start;
		justify-content: space-between;
		flex-direction: column;
		padding: 24px 40px;
		box-shadow: 0 3px 6px 0 rgba(0, 0, 0, .16);
		
		.qodef-widget-holder {
			flex-direction: column;
			align-items: flex-start;
			height: auto;
			margin-left: 0;
			
			.widget {
				margin : 0 0 8px;
				
				&:last-child {
					margin-bottom: 0;
				}
				
				> p {
					font-size: 12px;
				}
			}
		}
	}
	
	&.admin-bar {
		
		#qodef-page-header {
			top: 32px;
			height: calc(100% - 32px);
		}
	}
	
	#qodef-page-outer,
	#qodef-page-footer {
		padding-left: $vertical-header-width;
	}
}
